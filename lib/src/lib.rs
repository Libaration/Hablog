use byteorder::{BigEndian, LittleEndian, ReadBytesExt};
use std::collections::HashMap;
use std::io::Cursor;
use std::io::{self, BufWriter, Write};
mod packet;
use packet::Packet;

type HeaderHandler = fn(&mut [u8]);

fn walk_header(data: &mut [u8]) {
    println!("walk {} ", hex::encode(&data));
}

fn wave_header(data: &mut [u8]) {
    println!("wave {} ", hex::encode(&data));
}

#[no_mangle]
pub fn parse(data: &mut [u8], origin: &mut String) {
    let headers: HashMap<u32, HeaderHandler> = HashMap::from([
        (0x00000039, walk_header as _),
        (0x0000000a, wave_header as _),
    ]);
    if origin == "SERVER" {
        return;
    }
    let mut cursor = Cursor::new(&data[0..4]);
    let header = cursor.read_u32::<LittleEndian>().unwrap();
    // println!("header: {:?}", header);
    // println!("data from stream: {:?}", &data[0..4]);
    if let Some(subdata) = data.get(5..9) {
        println!("data as hex: {:?}", hex::encode(subdata));
        println!("data as string: {:?}", String::from_utf8_lossy(subdata));
        println!("data from stream: {:?}", subdata);
        println!(
            "as u32: {:?}",
            u32::from_le_bytes([subdata[0], subdata[1], subdata[2], subdata[3]])
        );
    } else {
        println!("Index out of range.");
    }

    let encoded_data = hex::encode(&data);
    let output = format!("{} : {}\n", origin, encoded_data);

    let stdout = io::stdout();

    if let Some(handler) = headers.get(&header) {
        handler(&mut data[4..]);
    } else {
        let mut handle = BufWriter::new(stdout.lock());
        if let Err(_) = handle.write_all(output.as_bytes()) {
            println!("error");
        }
    }
}

//header?   //walk packet?
// [bin] CLIENT : 00000039   02c600000001   0000000000000004000000050003302e30000000020000000200182f666c61746374726c20342f6d7620352c352c302e302f2f
// [bin] CLIENT : 00000039   02c600000001   0000000000000003000000050003302e30000000020000000200182f666c61746374726c20342f6d7620342c352c302e302f2f
// [bin] CLIENT : 00000039   02c600000001   0000000000000005000000050003302e30000000020000000200182f666c61746374726c20342f6d7620362c352c302e302f2f
// [bin] CLIENT : 00000039   02c600000001   0000000000000006000000050003302e30000000020000000200182f666c61746374726c20342f6d7620372c352c302e302f2f
// [bin] CLIENT : 00000039   02c600000001   0000000000000007000000050003302e30000000020000000200182f666c61746374726c20342f6d7620382c352c302e302f2f
// [bin] CLIENT : 00000039   02c600000001   0000000000000008000000050003302e30000000020000000200182f666c61746374726c20342f6d7620392c352c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   0000000000000009000000050003302e30000000020000000200192f666c61746374726c20342f6d762031302c352c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000a000000050003302e30000000020000000200192f666c61746374726c20342f6d762031312c352c302e302f2f
// [bin] CLIENT : 00000039   02c600000001   0000000000000002000000050003302e30000000020000000200182f666c61746374726c20342f6d7620332c352c302e302f2f
// [bin] CLIENT : 0000002e   02c600000001   000000000000000b000000050003302e300000000200000002000d2f666c61746374726c20342f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000050003302e30000000000000000000192f666c61746374726c20342f6d762031312c342c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000040003302e30000000000000000000192f666c61746374726c20342f6d762031312c332c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000030003302e30000000000000000000192f666c61746374726c20342f6d762031312c322c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000020003302e30000000000000000000192f666c61746374726c20342f6d762031312c312c302e302f2f
// [bin] CLIENT : 0000002e   02c600000001   000000000000000b000000010003302e300000000000000000000d2f666c61746374726c20342f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000010003302e30000000040000000400192f666c61746374726c20342f6d762031312c322c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000020003302e30000000040000000400192f666c61746374726c20342f6d762031312c332c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000030003302e30000000040000000400192f666c61746374726c20342f6d762031312c342c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000040003302e30000000040000000400192f666c61746374726c20342f6d762031312c352c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000050003302e30000000040000000400192f666c61746374726c20342f6d762031312c362c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000060003302e30000000040000000400192f666c61746374726c20342f6d762031312c372c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000070003302e30000000040000000400192f666c61746374726c20342f6d762031312c382c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000b000000080003302e30000000040000000400192f666c61746374726c20342f6d762031312c392c302e302f2f
// [bin] CLIENT : 0000003b   02c600000001   000000000000000b000000090003302e300000000400000004001a2f666c61746374726c20342f6d762031312c31302c302e302f2f
// [bin] CLIENT : 0000003b   02c600000001   000000000000000b0000000a0003302e300000000600000006001a2f666c61746374726c20342f6d762031302c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   000000000000000a0000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620392c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000090000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620382c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000080000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620372c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000070000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620362c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000060000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620352c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000050000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620342c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000040000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620332c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000030000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620322c31302c302e302f2f
// [bin] CLIENT : 0000003a   02c600000001   00000000000000020000000a0003302e30000000060000000600192f666c61746374726c20342f6d7620312c31302c302e302f2f

//
// [hablog] CLIENT : 0000000a0b9a0000000000000001
// [hablog] CLIENT : 0000000604bd0000002f
